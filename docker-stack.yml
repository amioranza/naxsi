version: "3.3"

services:
  waf:
    image: amioranza/naxsi
    hostname: naxsi
    restart: always
    #logging:
      #driver: syslog
      #options:
        #syslog-address: "tcp://localhost:514"
    depends_on:
      - elasticsearch
    networks:
        - waf-frontend
        - waf-backend
    ports:
      - "80:80"
      - "443:443"
    #volumes:
      #- ./nginx/nginx.conf:/etc/nginx/nginx.conf
      #- ./nginx/sites-enabled/default:/etc/nginx/sites-enabled/default
      #- ./nginx/sites-enabled/app-01:/etc/nginx/sites-enabled/app-01
      #- ./nginx/sites-enabled/app-02:/etc/nginx/sites-enabled/app-02
      #- ./nginx/sites-enabled/app-03:/etc/nginx/sites-enabled/app-03
      #- ./naxsi_core.rules:/etc/naxsi/naxsi_core.rules
      #- ./naxsi_whitelist.rules:/etc/naxsi/naxsi_whitelist.rules
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  app-01:
    image: ghost:alpine
    hostname: ghost
    restart: always
    networks:
      - waf-backend
    volumes:
      - ghost_data:/var/lib/ghost/content
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      restart_policy:
        condition: on-failure

  app-02:
    image: jenkins:alpine
    hostname: jenkins
    restart: always
    networks:
      - waf-backend
    volumes:
      - jenkins_data:/var/jenkins_home/
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      restart_policy:
        condition: on-failure

  app-03:
    image: redmine
    hostname: redmine
    restart: always
    networks:
      - waf-backend
    volumes:
      - redmine_data:/usr/src/redmine
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      restart_policy:
        condition: on-failure

  elasticsearch:
    image: elasticsearch
    hostname: elasticsearch
    restart: always
    environment:
      ES_JAVA_OPTS: "-Xms2g -Xmx2g"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - waf-backend
    ports:
      - "9200:9200"
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure

  kibana:
    image: kibana
    hostname: kibana
    restart: always
    volumes:
      #- ./kibana.yml:/usr/share/kibana/config/kibana.yml
      - kibana_data:/usr/share/kibana/data
    networks:
      - waf-backend
    ports:
      - "5601:5601"
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      restart_policy:
        condition: on-failure

  logstash:
    image: amioranza/logstash
    hostname: logstash
    restart: always
    #command: ["-f", "/home/logstash/logstash.conf"]
    volumes:
      #- ./logstash:/home/logstash
      - logstash_data:/usr/share/logstash/data
    networks:
      - waf-backend
    ports:
      - "514:5140/tcp"
      - "514:5140/udp"
    deploy:
      placement:
        constraints: [node.role == worker]
      replicas: 1
      restart_policy:
        condition: on-failure

volumes:
  elasticsearch_data:
    driver: nfs
    driver_opts:
      share: swarm-node01:/data/docker/volumes/elasticsearch_data
  kibana_data:
    driver: nfs
    driver_opts:
      share: swarm-node01:/data/docker/volumes/kibana_data
  logstash_data:
    driver: nfs
    driver_opts:
      share: swarm-node01:/data/docker/volumes/logstash_data
  ghost_data:
    driver: nfs
    driver_opts:
      share: swarm-node01:/data/docker/volumes/ghost_data
  jenkins_data:
    driver: nfs
    driver_opts:
      share: swarm-node01:/data/docker/volumes/jenkins_data
  redmine_data:
    driver: nfs
    driver_opts:
      share: swarm-node01:/data/docker/volumes/redmine_data

networks:
  waf-frontend:
    #driver: bridge
    ipam:
      config:
      - subnet: 10.157.157.0/24
  waf-backend:
    #driver: bridge
    ipam:
      config:
      - subnet: 10.158.158.0/24
